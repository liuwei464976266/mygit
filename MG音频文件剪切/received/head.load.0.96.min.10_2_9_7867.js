/**
    Head JS     The only script in your <HEAD>
    Copyright   Tero Piirainen (tipiirai)
    License     MIT / http://bit.ly/mit-license
    Version     0.96

    http://headjs.com
*/
(function (e) { function v(e) { if (e._done) { return } e(); e._done = 1 } function m(e) { var t = e.split("/"), n = t[t.length - 1], r = n.indexOf("?"); return r != -1 ? n.substring(0, r) : n } function g(e) { var t; if (typeof e == "object") { for (var n in e) { if (e[n]) { t = { name: n, url: e[n] } } } } else { t = { name: m(e), url: e } } var r = u[t.name]; if (r && r.url === t.url) { return r } u[t.name] = t; return t } function y(e, t) { if (!e) { return } if (typeof e == "object") { e = [].slice.call(e) } for (var n = 0; n < e.length; n++) { t.call(e, e[n], n) } } function b(e) { return Object.prototype.toString.call(e) == "[object Function]" } function w(e) { e = e || u; var t; for (var n in e) { if (e.hasOwnProperty(n) && e[n].state != d) { return false } t = true } return t } function E(e) { e.state = c; y(e.onpreload, function (e) { e.call() }) } function S(e, t) { if (e.state === undefined) { e.state = h; e.onpreload = []; T({ src: e.url, type: "cache" }, function () { E(e) }) } } function x(e, t) { if (e.state == d) { return t && t() } if (e.state == p) { return l.ready(e.name, t) } if (e.state == h) { return e.onpreload.push(function () { x(e, t) }) } e.state = p; T(e.url, function () { e.state = d; if (t) { t() } y(o[e.name], function (e) { v(e) }); if (w() && r) { y(o.ALL, function (e) { v(e) }) } }) } function T(n, r) { var i = e.createElement("script"); i.type = "text/" + (n.type || "javascript"); i.src = n.src || n; i.async = false; i.setAttribute('crossorigin', 'anonymous'); i.onreadystatechange = i.onload = function () { var e = i.readyState; if (!r.done && (!e || /loaded|complete/.test(e))) { r.done = true; r() } }; (e.body || t).appendChild(i) } function N() { if (!r) { r = true; y(i, function (e) { v(e) }) } } var t = e.documentElement, n, r, i = [], s = [], o = {}, u = {}, a = e.createElement("script").async === true || "MozAppearance" in e.documentElement.style || window.opera; var f = window.head_conf && head_conf.head || "head", l = window[f] = window[f] || function () { l.ready.apply(null, arguments) }; var c = 1, h = 2, p = 3, d = 4; if (a) { l.js = function () { var e = arguments, t = e[e.length - 1], n = {}; if (!b(t)) { t = null } if (typeof arguments[0] !== "string") { var r = []; for (var i = 0; i < arguments[0].length; i++) { r.push(arguments[0][i]) } r.push(t); e = r } y(e, function (r, i) { if (r != t) { r = g(r); n[r.name] = r; x(r, t && i == e.length - 2 ? function () { if (w(n)) { v(t) } } : null) } }); return l } } else { l.js = function () { if (typeof arguments[0] !== "string") { var e = []; for (var t = 0; t < arguments[0].length; t++) { e.push(arguments[0][t]) } e.push(arguments[1]); arguments = e } var r = arguments, i = [].slice.call(r, 1), o = r[r.length - 1], u = i[0]; if (!n) { s.push(function () { l.js.apply(null, r) }); return l } if (u) { x(g(r[0]), b(u) ? u : function () { l.js.apply(null, i) }) } else { x(g(r[0])) } return l } } l.ready = function (t, n) { if (t == e) { if (r) { v(n) } else { i.push(n) } return l } if (b(t)) { n = t; t = "ALL" } if (typeof t != "string" || !b(n)) { return l } var s = u[t]; if (s && s.state == d || t == "ALL" && w() && r) { v(n); return l } var a = o[t]; if (!a) { a = o[t] = [n] } else { a.push(n) } return l }; l.ready(e, function () { if (w()) { y(o.ALL, function (e) { v(e) }) } if (l.feature) { l.feature("domloaded", true) } }); if (window.addEventListener) { e.addEventListener("DOMContentLoaded", N, false); window.addEventListener("load", N, false) } else if (window.attachEvent) { e.attachEvent("onreadystatechange", function () { if (e.readyState === "complete") { N() } }); var C = 1; try { C = window.frameElement } catch (k) { } if (!C && t.doScroll) { (function () { try { t.doScroll("left"); N() } catch (e) { setTimeout(arguments.callee, 1); return } })() } window.attachEvent("onload", N) } if (!e.readyState && e.addEventListener) { e.readyState = "loading"; e.addEventListener("DOMContentLoaded", handler = function () { e.removeEventListener("DOMContentLoaded", handler, false); e.readyState = "complete" }, false) } setTimeout(function () { n = true; y(s, function (e) { e() }) }, 300) })(document)